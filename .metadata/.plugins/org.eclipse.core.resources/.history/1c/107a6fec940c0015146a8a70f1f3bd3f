package com.epam.newyeargift.dao;

import java.util.ArrayList;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;

import com.epam.newyeargift.entity.Candy;
import com.epam.newyeargift.entity.Caramel;
import com.epam.newyeargift.entity.CaramelType;
import com.epam.newyeargift.entity.Chocolate;
import com.epam.newyeargift.entity.ChocolateType;
import com.epam.newyeargift.entity.Color;
import com.epam.newyeargift.entity.Filling;
import com.epam.newyeargift.entity.GiftBox;
import com.epam.newyeargift.entity.Jelly;
import com.epam.newyeargift.entity.Taste;

public class StaxParser implements DataAccessDao {
	private GiftBox library;
    private Candy currentBook;
    private ArrayList<Candy> books;
    
	@Override
	public GiftBox getGiftFromSource(Object... args) throws DaoException {
		// TODO Auto-generated method stub
		return null;
	}
	
	private Library parsing(XMLStreamReader reader) throws XMLStreamException {
        String name;
        while (reader.hasNext()) {
            int type = reader.next();
            switch (type) {
                case XMLStreamConstants.START_ELEMENT:
                    name = reader.getLocalName();
                    switch (CandiesTagsEnum.valueOf(name.toUpperCase())) {
                        case BOX:
                            library = new GiftBox();
                            books = (ArrayList<Candy>) library.getBook();
                            break;
                        case CHOCOLATE:
                            currentBook = new Chocolate();
                            currentBook.setId(reader.getAttributeValue(0));
                            break;
                        case CARAMEL:
                            currentBook = new Caramel();
                            currentBook.setId(reader.getAttributeValue(0));
                            break;
                        case JELLY:
                            currentBook = new Jelly();
                            currentBook.setId(reader.getAttributeValue(0));
                            break;
                        default:
                            writeBookFeature(reader);
                            break;
                    }
                    break;

                case XMLStreamConstants.END_ELEMENT:
                    name = reader.getLocalName();
                    switch (CandiesTagsEnum.valueOf(name.toUpperCase())) {
	                    case BOX:
	                    	return library;
	                        break;
	                    case CHOCOLATE:
	                    	books.add(currentBook);
	                        break;
	                    case CARAMEL:
	                    	books.add(currentBook);
	                        break;
	                    case JELLY:
	                    	books.add(currentBook);
	                        break;
                    }
                    break;
            }
        }
        return null;
    }

    private void writeBookFeature(XMLStreamReader reader) throws XMLStreamException {
        switch (CandiesTagsEnum.valueOf(reader.getLocalName().toUpperCase())) {
            
            case NAME:
                currentBook.setName(reader.getElementText());
                break;
            case WEIGHT:
                currentBook.setWeight(Integer.parseInt(reader.getElementText()));
                break;
            case SHUGAR_AMOUNT:
                currentBook.setShugarAmount(Integer.parseInt(reader.getElementText()));
                break;
            case COLOR:
                ((Caramel) currentBook).setColor(Color.valueOf(reader.getElementText()));
                break;
            case TYPE_OF_CARAMEL:
                ((Caramel) currentBook).setCaramelType(CaramelType.valueOf(reader.getElementText()));
                break;
            case TYPE_OF_CHOCOLATE:
                ((Chocolate) currentBook).setChocolateType(ChocolateType.valueOf(reader.getElementText()));
                break;
            case FILLING:
                ((Chocolate) currentBook).setFilling(Filling.valueOf(reader.getElementText()));
                break;
            case TASTE:
                ((Jelly) currentBook).setTaste(Taste.valueOf((reader.getElementText())));
                break;
		default:
			break;
        }

    }

    enum CandiesTagsEnum {
        BOX("box"), 
        CHOCOLATE("chocolate"),
        CARAMEL("caramel"), 
        JELLY("jelly"),
	    NAME("name"), 
	    WEIGHT("weight"),
        SHUGAR_AMOUNT("shugar-amount"), 
        COLOR("color"), 
        TYPE_OF_CARAMEL("type-of-caramel"),
        TYPE_OF_CHOCOLATE("type-of-chocolate"),
        FILLING("filling"),
        TASTE("taste");
        
        private String value;
        
        private CandiesTagsEnum(String value) {
        	this.value = value;
        }
        
        public String getValue() {
        	return value;
        }

}
