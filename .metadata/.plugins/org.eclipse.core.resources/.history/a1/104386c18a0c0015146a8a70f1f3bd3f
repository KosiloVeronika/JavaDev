package com.epam.newyeargift.dao;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

import com.epam.newyeargift.entity.Candy;
import com.epam.newyeargift.entity.Chocolate;
import com.epam.newyeargift.entity.ChocolateType;
import com.epam.newyeargift.entity.EntityException;
import com.epam.newyeargift.entity.Filling;
import com.epam.newyeargift.entity.GiftBox;
import com.epam.newyeargift.entity.Taste;

public class SaxParser extends DefaultHandler implements DataAccessDao {
	private final GiftBox box;
    private Candy currentCandy;
    private final ArrayList<Candy> candies;
    private CandiesTagsEnum cTagsEnum;
    
    public SaxParser() throws EntityException {
        box = new GiftBox();
        candies = (ArrayList<Candy>) box.getCandies();
        cTagsEnum = null;
    }

	@Override
	public GiftBox getGiftFromSource(Object... args) throws DaoException {
		try {
            String filePath = (String) args[0];
            SAXParserFactory factory = SAXParserFactory.newInstance();
            SAXParser parser = factory.newSAXParser();
            parser.parse(new File(filePath), this);
            return box;
        } catch (ParserConfigurationException | SAXException | IOException ex) {
            throw new DaoException(ex.getMessage(), ex);
        }
	}
	
	@Override 
    public void startElement(String namespaceURI, String localName, String qName,Attributes atts) throws SAXException { 
        if (qName.equals("chocolate")){
            currentCandy = new Chocolate();
            currentCandy.setId(atts.getValue(0));
            currentCandy.setName(atts.getValue(1));
        }
        if (!"box".equals(qName) && !"chocolate".equals(qName)){
            cTagsEnum = CandiesTagsEnum.valueOf(qName.toUpperCase());
        }
  
    }
    
    @Override
    public void endElement(String uri, String localName,String qName){
        if (qName.equals("chocolate")|qName.equals("caramel")|
        	qName.equals("jelly")) {
            candies.add(currentCandy);
        }
        cTagsEnum = null;
    }
    
    @Override 
    public void characters(char[] ch, int start, int length) throws SAXException { 
        String value = new String(ch, start, length).trim();

        if (cTagsEnum == null) return;
        switch(cTagsEnum) {
            case COLOR:
                currentCandy.setWriter(value);
                break;
            case TYPE_OF_CARAMEL:
                currentCandy.setPaperback(value);
                break;
            case TYPE_OF_CHOCOLATE:
                currentCandy.setTypeOfChocolate(ChocolateType.valueOf(value));
                break;
            case FILLING:
                currentCandy.setFilling(Filling.valueOf(value));
                break;
            case TASTE:
                currentCandy.setTaste(Taste.valueOf(value));
                break;
        }
    }

}

enum CandiesTagsEnum {
    NAME("name"), 
    WEIGHT("weight"), 
    SHUGAR_AMOUNT("shugar-amount"), 
    COLOR("color"), 
    TYPE_OF_CARAMEL("type-of-caramel"),
    TYPE_OF_CHOCOLATE("type-of-chocolate"),
    FILLING("filling"),
    TASTE("taste");
    
    private String value;
    
    private CandiesTagsEnum(String value) {
    	this.value = value;
    }
    
    public String getValue() {
    	return value;
    }
}
